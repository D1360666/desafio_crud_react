{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tecnico\\\\Desktop\\\\Sofka\\\\React\\\\kata-crud-refactoring\\\\front\\\\src\\\\todo\\\\FormView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useRef, useState } from \"react\";\nimport consumer from \"./consumer\";\nimport events from \"./events\";\nimport Store from \"../store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(_ref => {\n  _s();\n\n  let {\n    lstId,\n    todo\n  } = _ref;\n  const formRef = useRef(null);\n  const {\n    dispatch\n  } = useContext(Store);\n  const item = todo.item[listId] ? todo.item[listId] : {};\n  const [state, setState] = useState(item);\n\n  const onAdd = event => {\n    event.preventDefault();\n    const request = {\n      name: state.name,\n      id: null,\n      completed: false\n    };\n    consumer.save(listId, request).then(response => {\n      if (response.ok) {\n        response.json().then(result => {\n          dispatch(events.saved(listId, result));\n          setState({\n            name: \"\"\n          });\n          formRef.current.reset();\n        });\n      }\n    });\n  };\n\n  const onEdit = event => {\n    event.preventDefault();\n    const request = {\n      name: state.name,\n      id: item.id,\n      completed: item.completed\n    };\n    consumer.update(listId, request).then(response => {\n      if (response.ok) {\n        response.json().then(result => {\n          dispatch(events.updated(listId, result));\n          setState({\n            name: \"\"\n          });\n          formRef.current.reset();\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    ref: formRef,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"\\xBFQue deseas hacer?\",\n      defaultValue: item.name,\n      onChange: event => {\n        setState({ ...state,\n          name: event.target.value\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), item.id && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onEdit,\n      children: \" Actualizar \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 25\n    }, this), !item.id && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onAdd,\n      children: \"Crear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 12\n  }, this);\n}, \"0WLvOU8vLAwjd8pNHA156Ud+yZw=\");","map":{"version":3,"sources":["C:/Users/tecnico/Desktop/Sofka/React/kata-crud-refactoring/front/src/todo/FormView.js"],"names":["React","useContext","useRef","useState","consumer","events","Store","lstId","todo","formRef","dispatch","item","listId","state","setState","onAdd","event","preventDefault","request","name","id","completed","save","then","response","ok","json","result","saved","current","reset","onEdit","update","updated","target","value"],"mappings":"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","sourcesContent":["import React, {useContext, useRef, useState} from \"react\";\r\nimport consumer from \"./consumer\";\r\nimport events from \"./events\";\r\nimport Store from \"../store\";\r\n\r\nexport default ({ lstId, todo }) => {\r\n    const formRef = useRef(null);\r\n    const { dispatch } = useContext(Store);\r\n    const item = todo.item[listId] ? todo.item[listId] : {};\r\n    const [state, setState] = useState(item);\r\n\r\n    const onAdd = (event) => {\r\n        event.preventDefault();\r\n\r\n        const request = {\r\n            name: state.name,\r\n            id: null,\r\n            completed: false\r\n        };\r\n\r\n        consumer.save(listId, request).then((response) =>{\r\n            if(response.ok){\r\n                response.json().then((result) => {\r\n                    dispatch(events.saved(listId, result));\r\n                    setState({ name: \"\"});\r\n                    formRef.current.reset();\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    const onEdit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const request = {\r\n            name: state.name,\r\n            id: item.id,\r\n            completed: item.completed\r\n        };\r\n        \r\n        consumer.update(listId, request).then((response) => {\r\n            if(response.ok){\r\n                response.json().then((result) => {\r\n                    dispatch(events.updated(listId, result));\r\n                    setState({ name: \"\"});\r\n                    formRef.current.reset();\r\n\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    return <form ref={formRef}>\r\n        <input \r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Â¿Que deseas hacer?\"\r\n            defaultValue={item.name}\r\n            onChange={(event) => {\r\n                setState({ ...state, name: event.target.value })\r\n            }}></input>\r\n            {item.id && <button onClick={onEdit}> Actualizar </button>}\r\n            {!item.id && <button onClick={onAdd}>Crear</button>}\r\n    </form>\r\n}"]},"metadata":{},"sourceType":"module"}