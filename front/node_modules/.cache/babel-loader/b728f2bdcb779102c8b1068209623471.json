{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tecnico\\\\Desktop\\\\Sofka\\\\React\\\\kata-crud-refactoring\\\\front\\\\src\\\\store.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, createContext } from \"react\";\nimport listReducer from \"./Components/reducer\";\nimport itemReducer from \"./todo/reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  list: {\n    elements: []\n  },\n  todo: {\n    elements: [],\n    item: {}\n  },\n  message: {}\n};\nconst Store = /*#__PURE__*/createContext(initialState);\nconst merge = { ...listReducer(),\n  ...itemReducer()\n};\n\nfunction reducer(state, action) {\n  console.log(\"dispatch => \", action.type);\n  return merge[action.type] ? merge[action.type](state, action) : state;\n}\n\nexport const StoreProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(Store.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 16\n  }, this);\n};\n\n_s(StoreProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = StoreProvider;\nexport default Store;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreProvider\");","map":{"version":3,"sources":["C:/Users/tecnico/Desktop/Sofka/React/kata-crud-refactoring/front/src/store.js"],"names":["React","useReducer","createContext","listReducer","itemReducer","initialState","list","elements","todo","item","message","Store","merge","reducer","state","action","console","log","type","StoreProvider","children","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,QAAgD,OAAhD;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEI,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,QAAQ,EAAE;AADR,GADW;AAIjBC,EAAAA,IAAI,EAAE;AACFD,IAAAA,QAAQ,EAAE,EADR;AAEFE,IAAAA,IAAI,EAAE;AAFJ,GAJW;AAQjBC,EAAAA,OAAO,EAAG;AARO,CAArB;AAWA,MAAMC,KAAK,gBAAGT,aAAa,CAACG,YAAD,CAA3B;AAEA,MAAMO,KAAK,GAAG,EAAC,GAAGT,WAAW,EAAf;AAAmB,KAAGC,WAAW;AAAjC,CAAd;;AACA,SAASS,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,MAAM,CAACG,IAAnC;AACA,SAAON,KAAK,CAACG,MAAM,CAACG,IAAR,CAAL,GAAqBN,KAAK,CAACG,MAAM,CAACG,IAAR,CAAL,CAAmBJ,KAAnB,EAA0BC,MAA1B,CAArB,GAAyDD,KAAhE;AACH;;AAED,OAAO,MAAMK,aAAa,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC3C,QAAM,CAACN,KAAD,EAAQO,QAAR,IAAoBpB,UAAU,CAACY,OAAD,EAAUR,YAAV,CAApC;AACA,sBAAO,QAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAE;AAACS,MAAAA,KAAD;AAAQO,MAAAA;AAAR,KAAvB;AAAA,cACFD;AADE;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CALM;;GAAMD,a;;KAAAA,a;AAOb,eAAeR,KAAf","sourcesContent":["import React, { useReducer, createContext} from \"react\";\r\nimport listReducer from \"./Components/reducer\";\r\nimport itemReducer from \"./todo/reducer\";\r\n\r\n    const initialState = {\r\n        list: {\r\n            elements: []\r\n        },\r\n        todo: {\r\n            elements: [],\r\n            item: {}\r\n        },\r\n        message : {}\r\n    };\r\n\r\n    const Store = createContext(initialState);\r\n\r\n    const merge = {...listReducer(), ...itemReducer() };\r\n    function reducer(state, action) {\r\n        console.log(\"dispatch => \", action.type)\r\n        return merge[action.type] ? merge[action.type](state, action) : state;\r\n    }\r\n\r\n    export const StoreProvider = ({ children }) => {\r\n        const [state, dispatch] = useReducer(reducer, initialState);\r\n        return <Store.Provider value={{state, dispatch}}>\r\n            {children}\r\n        </Store.Provider>\r\n    };\r\n\r\n    export default Store;"]},"metadata":{},"sourceType":"module"}