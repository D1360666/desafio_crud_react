{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tecnico\\\\Desktop\\\\Sofka\\\\React\\\\kata-crud-refactoring\\\\front\\\\src\\\\todo\\\\ListView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport consumer from \"./consumer\";\nimport events from \"./events\";\nimport Store from \".../store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(_ref => {\n  _s();\n\n  let {\n    listId,\n    todo\n  } = _ref;\n  const {\n    dispatch\n  } = useContext(Store);\n  const [isLoaded, setLoaded] = useState(false);\n  const list = todo.elements.filter(element => {\n    return element.listId === listId;\n  });\n  useEffect(() => {\n    consumer.findAll(listId).then(response => {\n      if (response.ok) {\n        response.json().then(items => {\n          console.log(\"Todo cargado exitosamente.\");\n          setLoaded(true);\n          dispatch(events.finded(listId, items));\n        });\n      }\n    });\n  }, [listId, dispatch]);\n\n  const onDelete = itemId => {\n    consumer.delete(itemId).then(response => {\n      if (response.ok) {\n        dispatch(events.deleted(listId, itemId));\n      }\n    });\n  };\n\n  const onEdit = item => {\n    dispatch(events.onEdited(listId, item));\n  };\n\n  const onChange = (event, item) => {\n    const request = {\n      name: item.name,\n      id: item.id,\n      completed: event.target.checked\n    };\n    consumer.update(listId, request).then(response => {\n      if (response.ok) {\n        response.json().then(() => {\n          dispatch(events.updated(listId, request));\n        });\n      }\n    });\n  };\n\n  const decorationDone = {\n    textDecoration: 'line-through',\n    color: '#c3c3c3'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Tarea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"\\xBFCompletado?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: list.map(todo => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: todo.completed ? decorationDone : {},\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: todo.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: todo.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                defaultChecked: todo.completed,\n                onChange: event => onChange(event, todo)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => onDelete(todo.id),\n                children: \"Eliminar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => onEdit(todo),\n                children: \"Editar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 25\n            }, this)]\n          }, todo.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 12\n  }, this);\n}, \"2YxoiNq/DV0B8vct0jX/yvVZdG4=\");","map":{"version":3,"sources":["C:/Users/tecnico/Desktop/Sofka/React/kata-crud-refactoring/front/src/todo/ListView.js"],"names":["React","useContext","useEffect","useState","consumer","events","Store","listId","todo","dispatch","isLoaded","setLoaded","list","elements","filter","element","findAll","then","response","ok","json","items","console","log","finded","onDelete","itemId","delete","deleted","onEdit","item","onEdited","onChange","event","request","name","id","completed","target","checked","update","updated","decorationDone","textDecoration","color","map"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState } from \"react\";\r\nimport consumer from \"./consumer\";\r\nimport events from \"./events\";\r\nimport Store from \".../store\";\r\n\r\nexport default ({ listId, todo}) => {\r\n    const { dispatch } = useContext(Store);\r\n    const [isLoaded, setLoaded] = useState(false);\r\n    const list = todo.elements.filter((element) => {\r\n        return element.listId === listId;\r\n    });\r\n    useEffect(() => {\r\n        consumer.findAll(listId).then((response) => {\r\n            if(response.ok){\r\n                response.json().then((items) => {\r\n                    console.log(\"Todo cargado exitosamente.\");\r\n                    setLoaded(true);\r\n                    dispatch(events.finded(listId, items));\r\n                })\r\n            }\r\n        });\r\n    }, [listId, dispatch]);\r\n\r\n    const onDelete = (itemId) => {\r\n        consumer.delete(itemId).then((response) => {\r\n            if(response.ok){\r\n                dispatch(events.deleted(listId, itemId));\r\n            }\r\n        })\r\n    };\r\n\r\n    const onEdit = (item) => {\r\n        dispatch(events.onEdited(listId, item))\r\n    };\r\n\r\n    const onChange = (event, item) => {\r\n        const request = {\r\n            name: item.name,\r\n            id: item.id,\r\n            completed: event.target.checked\r\n        };\r\n        consumer.update(listId, request).then((response) => {\r\n            if(response.ok){\r\n                response.json().then(() => {\r\n                    dispatch(events.updated(listId, request))\r\n                })\r\n            }\r\n        });\r\n    };\r\n\r\n    const decorationDone = {\r\n        textDecoration: 'line-through',\r\n        color: '#c3c3c3'\r\n    };\r\n\r\n    return <div>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <td>ID</td>\r\n                    <td>Tarea</td>\r\n                    <td>¿Completado?</td>\r\n                    <td></td>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {list.map((todo) => {\r\n                    return <tr key={todo.id} style={todo.completed ? decorationDone : {}}>\r\n                        <td>{todo.id}</td>\r\n                        <td>{todo.name}</td>\r\n                        <td><input type=\"checkbox\" defaultChecked={todo.completed} onChange={(event) => onChange(event, todo)}></input></td>\r\n                        <td><button onClick={() => onDelete(todo.id)}>Eliminar</button></td>\r\n                        <td><button onClick={() => onEdit(todo)}>Editar</button></td>\r\n                    </tr>         \r\n                })}\r\n            </tbody>\r\n        </table>\r\n\r\n    </div>\r\n}"]},"metadata":{},"sourceType":"module"}