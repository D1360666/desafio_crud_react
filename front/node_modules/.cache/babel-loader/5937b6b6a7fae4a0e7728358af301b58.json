{"ast":null,"code":"import { actionType } from \"./events\";\nexport default (() => {\n  const action = {};\n\n  action[actionType.LIST_FINDED] = (state, action) => {\n    const list = state.todo.elements;\n    action.items.forEach(element => {\n      list.push(element);\n    });\n    return { ...state,\n      todo: {\n        elements: list,\n        item: {}\n      }\n    };\n  };\n\n  action[actionType.LIST_CREATED] = (state, action) => {\n    const list = state.todo.elements;\n    list.push(action.item);\n    return { ...state,\n      todo: {\n        elements: list,\n        item: {}\n      }\n    };\n  };\n\n  action[actionType.LIST_ON_EDITED] = (state, action) => {\n    const editToDo = { ...state.todo\n    };\n    editToDo.item[action.listId] = action.item;\n    return { ...state,\n      todo: editToDo\n    };\n  };\n\n  action[actionType.LIST_UPDATED] = (state, action) => {\n    const list = state.todo.elements.map(element => {\n      if (element.id === action.item.id) {\n        return { ...action.item,\n          listId: action.listId\n        };\n      }\n\n      return element;\n    });\n    return { ...state,\n      todo: {\n        elements: list,\n        item: {}\n      }\n    };\n  };\n\n  action[actionType.LIST_DELETED] = (state, action) => {\n    const list = state.todo.elements.filter(element => {\n      return element.id !== action.itemId;\n    });\n    return { ...state,\n      todo: {\n        elemtns: list,\n        item: {}\n      }\n    };\n  };\n\n  return action;\n});","map":{"version":3,"sources":["C:/Users/tecnico/Desktop/Sofka/React/kata-crud-refactoring/front/src/todo/reducer.js"],"names":["actionType","action","LIST_FINDED","state","list","todo","elements","items","forEach","element","push","item","LIST_CREATED","LIST_ON_EDITED","editToDo","listId","LIST_UPDATED","map","id","LIST_DELETED","filter","itemId","elemtns"],"mappings":"AAAA,SAASA,UAAT,QAA2B,UAA3B;AAEA,gBAAe,MAAM;AACjB,QAAMC,MAAM,GAAG,EAAf;;AAEAA,EAAAA,MAAM,CAACD,UAAU,CAACE,WAAZ,CAAN,GAAiC,CAACC,KAAD,EAAQF,MAAR,KAAmB;AAChD,UAAMG,IAAI,GAAGD,KAAK,CAACE,IAAN,CAAWC,QAAxB;AACAL,IAAAA,MAAM,CAACM,KAAP,CAAaC,OAAb,CAAqBC,OAAO,IAAI;AAC5BL,MAAAA,IAAI,CAACM,IAAL,CAAUD,OAAV;AACH,KAFD;AAGI,WAAO,EAAC,GAAGN,KAAJ;AAAWE,MAAAA,IAAI,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,IAAZ;AAAkBO,QAAAA,IAAI,EAAC;AAAvB;AAAjB,KAAP;AACP,GAND;;AAQAV,EAAAA,MAAM,CAACD,UAAU,CAACY,YAAZ,CAAN,GAAkC,CAACT,KAAD,EAAQF,MAAR,KAAmB;AACjD,UAAMG,IAAI,GAAGD,KAAK,CAACE,IAAN,CAAWC,QAAxB;AACAF,IAAAA,IAAI,CAACM,IAAL,CAAUT,MAAM,CAACU,IAAjB;AACA,WAAO,EAAC,GAAGR,KAAJ;AAAWE,MAAAA,IAAI,EAAE;AAACC,QAAAA,QAAQ,EAAEF,IAAX;AAAiBO,QAAAA,IAAI,EAAC;AAAtB;AAAjB,KAAP;AACH,GAJD;;AAMAV,EAAAA,MAAM,CAACD,UAAU,CAACa,cAAZ,CAAN,GAAoC,CAACV,KAAD,EAAQF,MAAR,KAAmB;AACnD,UAAMa,QAAQ,GAAG,EAAC,GAAGX,KAAK,CAACE;AAAV,KAAjB;AACAS,IAAAA,QAAQ,CAACH,IAAT,CAAcV,MAAM,CAACc,MAArB,IAA+Bd,MAAM,CAACU,IAAtC;AACA,WAAO,EAAE,GAAGR,KAAL;AAAYE,MAAAA,IAAI,EAAES;AAAlB,KAAP;AACH,GAJD;;AAMAb,EAAAA,MAAM,CAACD,UAAU,CAACgB,YAAZ,CAAN,GAAkC,CAACb,KAAD,EAAQF,MAAR,KAAmB;AACjD,UAAMG,IAAI,GAAGD,KAAK,CAACE,IAAN,CAAWC,QAAX,CAAoBW,GAApB,CAAyBR,OAAD,IAAa;AAC9C,UAAGA,OAAO,CAACS,EAAR,KAAejB,MAAM,CAACU,IAAP,CAAYO,EAA9B,EAAiC;AAC7B,eAAO,EAAE,GAAGjB,MAAM,CAACU,IAAZ;AAAkBI,UAAAA,MAAM,EAACd,MAAM,CAACc;AAAhC,SAAP;AACH;;AACD,aAAON,OAAP;AACH,KALY,CAAb;AAMA,WAAO,EAAE,GAAGN,KAAL;AAAYE,MAAAA,IAAI,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,IAAZ;AAAkBO,QAAAA,IAAI,EAAC;AAAvB;AAAlB,KAAP;AACH,GARD;;AASAV,EAAAA,MAAM,CAACD,UAAU,CAACmB,YAAZ,CAAN,GAAkC,CAAChB,KAAD,EAAQF,MAAR,KAAmB;AACjD,UAAMG,IAAI,GAAGD,KAAK,CAACE,IAAN,CAAWC,QAAX,CAAoBc,MAApB,CAA4BX,OAAD,IAAa;AACjD,aAAOA,OAAO,CAACS,EAAR,KAAejB,MAAM,CAACoB,MAA7B;AACH,KAFY,CAAb;AAGA,WAAO,EAAE,GAAGlB,KAAL;AAAYE,MAAAA,IAAI,EAAE;AAACiB,QAAAA,OAAO,EAAElB,IAAV;AAAgBO,QAAAA,IAAI,EAAE;AAAtB;AAAlB,KAAP;AACH,GALD;;AAMA,SAAOV,MAAP;AACH,CAvCD","sourcesContent":["import { actionType } from \"./events\";\r\n\r\nexport default () => {\r\n    const action = {};\r\n\r\n    action[actionType.LIST_FINDED] = (state, action) => {\r\n        const list = state.todo.elements;\r\n        action.items.forEach(element => {\r\n            list.push(element);\r\n        });\r\n            return {...state, todo: { elements: list, item:{}}}\r\n    };\r\n\r\n    action[actionType.LIST_CREATED] = (state, action) => {\r\n        const list = state.todo.elements;\r\n        list.push(action.item);\r\n        return {...state, todo: {elements: list, item:{}}}\r\n    };\r\n\r\n    action[actionType.LIST_ON_EDITED] = (state, action) => {\r\n        const editToDo = {...state.todo };\r\n        editToDo.item[action.listId] = action.item;\r\n        return { ...state, todo: editToDo}\r\n    };\r\n\r\n    action[actionType.LIST_UPDATED] = (state, action) => {\r\n        const list = state.todo.elements.map((element) => {\r\n            if(element.id === action.item.id){\r\n                return { ...action.item, listId:action.listId};\r\n            }\r\n            return element;\r\n        });\r\n        return { ...state, todo: { elements: list, item:{} }}\r\n    };\r\n    action[actionType.LIST_DELETED] = (state, action) => {\r\n        const list = state.todo.elements.filter((element) => {\r\n            return element.id !== action.itemId;\r\n        });\r\n        return { ...state, todo: {elemtns: list, item: {} }}\r\n    };\r\n    return action;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}